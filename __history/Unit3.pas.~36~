unit Unit3;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Math, System.Variants, System.Generics.Collections, System.Contnrs, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Data.Win.ADODB, Vcl.StdCtrls,
  Vcl.ExtCtrls, Vcl.DBCtrls, Vcl.Mask, Vcl.Imaging.pngimage;

type
  TForm3 = class(TForm)
    ADOConnection1: TADOConnection;
    ADOTable1: TADOTable;
    ADOQuery1: TADOQuery;
    ScrollBox1: TScrollBox;
    RadioGroup1: TRadioGroup;
    RadioGroup2: TRadioGroup;
    Shape1: TShape;
    Shape2: TShape;
    Label1: TLabel;
    Label7: TLabel;
    Shape3: TShape;
    Label2: TLabel;
    Label3: TLabel;
    Shape4: TShape;
    Label5: TLabel;
    Label6: TLabel;
    Label8: TLabel;
    Edit1: TEdit;
    Edit2: TEdit;
    Shape5: TShape;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Shape6: TShape;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    RadioGroup3: TRadioGroup;
    RadioGroup4: TRadioGroup;
    RadioGroup5: TRadioGroup;
    RadioGroup6: TRadioGroup;
    RadioGroup7: TRadioGroup;
    RadioGroup8: TRadioGroup;
    RadioGroup9: TRadioGroup;
    RadioGroup10: TRadioGroup;
    RadioGroup11: TRadioGroup;
    RadioGroup12: TRadioGroup;
    RadioGroup13: TRadioGroup;
    RadioGroup14: TRadioGroup;
    RadioGroup15: TRadioGroup;
    RadioGroup16: TRadioGroup;
    RadioGroup17: TRadioGroup;
    RadioGroup18: TRadioGroup;
    RadioGroup19: TRadioGroup;
    RadioGroup20: TRadioGroup;
    RadioGroup21: TRadioGroup;
    RadioGroup22: TRadioGroup;
    RadioGroup23: TRadioGroup;
    RadioGroup24: TRadioGroup;
    RadioGroup25: TRadioGroup;
    RadioGroup26: TRadioGroup;
    RadioGroup27: TRadioGroup;
    RadioGroup28: TRadioGroup;
    RadioGroup29: TRadioGroup;
    RadioGroup30: TRadioGroup;
    RadioGroup31: TRadioGroup;
    RadioGroup32: TRadioGroup;
    RadioGroup33: TRadioGroup;
    RadioGroup34: TRadioGroup;
    RadioGroup35: TRadioGroup;
    RadioGroup36: TRadioGroup;
    Image1: TImage;
    ADOConnection2: TADOConnection;
    ADOTable2: TADOTable;
    ADOQuery2: TADOQuery;
    GroupBox1: TGroupBox;
    Label4: TLabel;
    GroupBox2: TGroupBox;
    RadioButton1: TRadioButton;
    RadioButton2: TRadioButton;
    RadioButton3: TRadioButton;
    RadioButton4: TRadioButton;
    RadioButton5: TRadioButton;
    RadioButton6: TRadioButton;
    RadioButton7: TRadioButton;
    RadioButton8: TRadioButton;
    ADOConnection3: TADOConnection;
    ADOQuery3: TADOQuery;
    ADOTable3: TADOTable;
    Label22: TLabel;
    Label9: TLabel;
    Label21: TLabel;
    Edit6: TEdit;
    Label23: TLabel;
    Edit9: TEdit;
    Label13: TLabel;
    Label24: TLabel;
    Label25: TLabel;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit10: TEdit;
    Edit11: TEdit;
    ADOConnection4: TADOConnection;
    ADOQuery4: TADOQuery;
    ADOTable4: TADOTable;
    Edit5: TEdit;
    Edit7: TEdit;
    Edit8: TEdit;
    Edit12: TEdit;
    ADOConnection5: TADOConnection;
    ADOTable5: TADOTable;
    ADOQuery5: TADOQuery;
    Label26: TLabel;
    Label27: TLabel;
    Button1: TButton;
    Label28: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure Edit2Enter(Sender: TObject);
    procedure Edit2Exit(Sender: TObject);
    procedure Edit1Enter(Sender: TObject);
    procedure Edit1Exit(Sender: TObject);
    procedure Edit6Enter(Sender: TObject);
    procedure Edit6Exit(Sender: TObject);
    procedure Edit9Enter(Sender: TObject);
    procedure Edit9Exit(Sender: TObject);
    procedure Edit4Enter(Sender: TObject);
    procedure Edit4Exit(Sender: TObject);
    procedure Edit3Enter(Sender: TObject);
    procedure Edit3Exit(Sender: TObject);
    procedure Edit10Enter(Sender: TObject);
    procedure Edit10Exit(Sender: TObject);
    procedure Edit11Enter(Sender: TObject);
    procedure Edit11Exit(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure RadioButton1Click(Sender: TObject);
    procedure RadioButton5Click(Sender: TObject);
    procedure RadioGroup1Click(Sender: TObject);
    procedure RadioGroup2Click(Sender: TObject);
    procedure RadioGroup3Click(Sender: TObject);
    procedure RadioGroup4Click(Sender: TObject);
    procedure RadioGroup5Click(Sender: TObject);
    procedure RadioGroup6Click(Sender: TObject);
    procedure RadioGroup7Click(Sender: TObject);
    procedure RadioGroup8Click(Sender: TObject);
    procedure RadioGroup9Click(Sender: TObject);
    procedure RadioGroup10Click(Sender: TObject);
    procedure RadioGroup11Click(Sender: TObject);
    procedure RadioGroup12Click(Sender: TObject);
    procedure RadioGroup13Click(Sender: TObject);
    procedure RadioGroup14Click(Sender: TObject);
    procedure RadioGroup15Click(Sender: TObject);
    procedure RadioGroup16Click(Sender: TObject);
    procedure RadioGroup17Click(Sender: TObject);
    procedure RadioGroup18Click(Sender: TObject);
    procedure RadioGroup19Click(Sender: TObject);
    procedure RadioGroup20Click(Sender: TObject);
    procedure RadioGroup21Click(Sender: TObject);
    procedure RadioGroup22Click(Sender: TObject);
    procedure RadioGroup23Click(Sender: TObject);
    procedure RadioGroup24Click(Sender: TObject);
    procedure RadioGroup25Click(Sender: TObject);
    procedure RadioGroup26Click(Sender: TObject);
    procedure RadioGroup27Click(Sender: TObject);
    procedure RadioGroup28Click(Sender: TObject);
    procedure RadioGroup29Click(Sender: TObject);
    procedure RadioGroup30Click(Sender: TObject);
    procedure RadioGroup31Click(Sender: TObject);
    procedure RadioGroup32Click(Sender: TObject);
    procedure RadioGroup33Click(Sender: TObject);
    procedure RadioGroup34Click(Sender: TObject);
    procedure RadioGroup35Click(Sender: TObject);
    procedure RadioGroup36Click(Sender: TObject);
    procedure RadioButton2Click(Sender: TObject);
    procedure RadioButton3Click(Sender: TObject);
    procedure RadioButton4Click(Sender: TObject);
    procedure RadioButton6Click(Sender: TObject);
    procedure RadioButton7Click(Sender: TObject);
    procedure RadioButton8Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form3: TForm3;
  ball: Integer = 0;
  schetchik: integer = 0;
   isFirstClick1: Boolean = true;  isFirstClick2: Boolean = true;
   isFirstClick3: Boolean = true;  isFirstClick4: Boolean = true;
   isFirstClick5: Boolean = true;  isFirstClick6: Boolean = true;// флаг показывает был ли уже сделан клик на RadioGroup,
   isFirstClick7: Boolean = true;  isFirstClick8: Boolean = true;
   isFirstClick9: Boolean = true;  isFirstClick10: Boolean = true;
   isFirstClick11: Boolean = true;  isFirstClick12: Boolean = true;
   isFirstClick13: Boolean = true;  isFirstClick14: Boolean = true;
   isFirstClick15: Boolean = true;  isFirstClick16: Boolean = true;
   isFirstClick17: Boolean = true;  isFirstClick18: Boolean = true;
   isFirstClick19: Boolean = true;  isFirstClick20: Boolean = true;
   isFirstClick21: Boolean = true;  isFirstClick22: Boolean = true;
   isFirstClick23: Boolean = true;  isFirstClick24: Boolean = true;
   isFirstClick25: Boolean = true;  isFirstClick26: Boolean = true;
   isFirstClick27: Boolean = true;  isFirstClick28: Boolean = true;
   isFirstClick29: Boolean = true;  isFirstClick30: Boolean = true;
   isFirstClick31: Boolean = true;  isFirstClick32: Boolean = true;
   isFirstClick33: Boolean = true;  isFirstClick34: Boolean = true;
   isFirstClick35: Boolean = true;  isFirstClick36: Boolean = true;
   isFirstClickzad2_1: Boolean = true;  isFirstClickzad2_2: Boolean = true;
implementation

{$R *.dfm}

type
  TQuestion = class
  public
    ID: Integer;
    Text: string;
    constructor Create(const AText: string; AID: Integer);
  end;

constructor TQuestion.Create(const AText: string; AID: Integer);
begin
  Text := AText;
  ID := AID;
end;



procedure LoadAnswersForQuestion(QuestionID: Integer; RadioGroup: TRadioGroup);//процедура дл€ вывода ответов 1-го задани€
begin
//   ќчищаем Items перед загрузкой новых ответов
  RadioGroup.Items.Clear;

//   ¬ыполн€ем SQL-запрос дл€ выбора ответов к вопросу с заданным ID
  Form3.ADOQuery1.Close;
  Form3.ADOQuery1.SQL.Text := 'SELECT [answer text] FROM answers WHERE [answer ID] = :QuestionID';
  Form3.ADOQuery1.Parameters.ParamByName('QuestionID').Value := QuestionID;
  Form3.ADOQuery1.Open;

  // ƒобавл€ем ответы в Items RadioGroup и возвращаем правильный ответ
  Form3.ADOQuery1.First;
  while not Form3.ADOQuery1.Eof do
  begin
    RadioGroup.Items.Add(Form3.ADOQuery1.FieldByName('answer text').AsString);

    Form3.ADOQuery1.Next;
  end;
end;




procedure LoadRandomQuestionsZad1;// вывод вопросов и ответов 1-го задани€
var
  i, QuestionNumber: Integer;
  Questions: TObjectList<TQuestion>;
  RandomIndex: Integer;
begin
  Form3.ADOQuery1.Close;
  Form3.ADOQuery1.SQL.Text := 'SELECT TOP 36 * FROM questions';
  Form3.ADOQuery1.Open;

  // —оздаем список вопросов
  Questions := TObjectList<TQuestion>.Create;
  try
    Form3.ADOQuery1.First;
    while not Form3.ADOQuery1.Eof do
    begin
      Questions.Add(TQuestion.Create(Form3.ADOQuery1.FieldByName('question text').AsString,
                    Form3.ADOQuery1.FieldByName('code').AsInteger));
      Form3.ADOQuery1.Next;
    end;

    QuestionNumber := 1; // Ќачальное значение пор€дкового номера вопроса

    // ¬ыводим вопросы рандомно в каждый RadioGroup
    for i := 0 to Min(Questions.Count - 1, 35) do
    begin
      RandomIndex := Random(Questions.Count); // √енерируем случайный индекс
      case i of
      0: begin
               Form3.RadioGroup1.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup1);
         end;
      1: begin
               Form3.RadioGroup2.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup2);
         end;
      2: begin
               Form3.RadioGroup3.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup3);
         end;
      3: begin
               Form3.RadioGroup4.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup4);
         end;
      4: begin
               Form3.RadioGroup5.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup5);
         end;
      5: begin
               Form3.RadioGroup6.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup6);
         end;
      6: begin
               Form3.RadioGroup7.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup7);
         end;
      7: begin
               Form3.RadioGroup8.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup8);
         end;
      8: begin
               Form3.RadioGroup9.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup9);
         end;
      9: begin
               Form3.RadioGroup10.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup10);
         end;
      10: begin
               Form3.RadioGroup11.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup11);
         end;
      11: begin
               Form3.RadioGroup12.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup12);
         end;
      12: begin
               Form3.RadioGroup13.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup13);
         end;
      13: begin
               Form3.RadioGroup14.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup14);
         end;
      14: begin
               Form3.RadioGroup15.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup15);
         end;
      15: begin
               Form3.RadioGroup16.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup16);
         end;
      16: begin
               Form3.RadioGroup17.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup17);
         end;
      17: begin
               Form3.RadioGroup18.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup18);
         end;
      18: begin
               Form3.RadioGroup19.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup19);
         end;
      19: begin
               Form3.RadioGroup20.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup20);
         end;
      20: begin
               Form3.RadioGroup21.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup21);
         end;
      21: begin
               Form3.RadioGroup22.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup22);
         end;
      22: begin
               Form3.RadioGroup23.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup23);
         end;
      23: begin
               Form3.RadioGroup24.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup24);
         end;
      24: begin
               Form3.RadioGroup25.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup25);
         end;
      25: begin
               Form3.RadioGroup26.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup26);
         end;
      26: begin
               Form3.RadioGroup27.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup27);
         end;
      27: begin
               Form3.RadioGroup28.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup28);
         end;
      28: begin
               Form3.RadioGroup29.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup29);
         end;
      29: begin
               Form3.RadioGroup30.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup30);
         end;
      30: begin
               Form3.RadioGroup31.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup31);
         end;
      31: begin
               Form3.RadioGroup32.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup32);
         end;
      32: begin
               Form3.RadioGroup33.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup33);
         end;
      33: begin
               Form3.RadioGroup34.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup34);
         end;
      34: begin
               Form3.RadioGroup35.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup35);
         end;
      35: begin
               Form3.RadioGroup36.Caption := IntToStr(QuestionNumber) + '. ' + Questions[RandomIndex].Text;
               LoadAnswersForQuestion(Questions[RandomIndex].ID, Form3.RadioGroup36);
         end;
      end;
      Inc(QuestionNumber); // ”величиваем пор€дковый номер вопроса
      Questions.Delete(RandomIndex); // ”дал€ем использованный вопрос из списка
    end;
  finally
    Questions.Free;
  end;
end;

procedure CheckCorrectAnswer(RadioGroup: TRadioGroup); //проверка правильности ответа 1-го задани€
var
  SelectedIndex: Integer;
  SelectedAnswer, CorrectAnswer: string;
begin
//   ѕолучаем индекс выбранного ответа в RadioGroup
  SelectedIndex := RadioGroup.ItemIndex;

//   ѕровер€ем, что был выбран какой-то ответ
  if SelectedIndex <> -1 then
  begin
//     ѕолучаем выбранный ответ
    SelectedAnswer := RadioGroup.Items[SelectedIndex];

//     ¬ыполн€ем SQL-запрос дл€ выбора правильного ответа из базы данных
    Form3.ADOQuery1.Close;
    Form3.ADOQuery1.SQL.Text := 'SELECT [correct answer] FROM answers WHERE [answer text] = :SelectedAnswer';
    Form3.ADOQuery1.Parameters.ParamByName('SelectedAnswer').Value := SelectedAnswer;
    Form3.ADOQuery1.Open;

//     ѕровер€ем правильность ответа
    if not Form3.ADOQuery1.IsEmpty then
    begin
      CorrectAnswer := Form3.ADOQuery1.FieldByName('correct answer').AsString;
      if CorrectAnswer = 'True' then
        ball:=ball+2
    end
  end;
end;




procedure LoadQuestionsZad2; //процедура дл€ вывода вопросов 2-го задани€
begin
  Form3.ADOQuery2.Close;
  Form3.ADOQuery2.SQL.Text := 'SELECT TOP 2 [question text] FROM questions';
  Form3.ADOQuery2.Open;

  // «агружаем вопросы в Label4 и Label21
  if not Form3.ADOQuery2.IsEmpty then
  begin
    Form3.Label4.Caption :='37. ' + Form3.ADOQuery2.Fields[0].AsString;
    Form3.ADOQuery2.Next;
    if not Form3.ADOQuery2.IsEmpty then
      Form3.Label22.caption :='38. ' + Form3.ADOQuery2.Fields[0].AsString;
  end;
end;

procedure LoadAnswersToGroupBox(GroupBox: TGroupBox; StartIndex, Count: Integer);
var
  i, RowIndex: Integer;
  RadioButton: TRadioButton;
begin

  // ¬ыполн€ем SQL-запрос дл€ выбора всех строк из столбца "answers text" и "correct answer"
  Form3.ADOQuery2.Close;
  Form3.ADOQuery2.SQL.Text := 'SELECT [answer text], [correct answer] FROM answers';
  Form3.ADOQuery2.Open;

  // ѕеремещаем указатель на нужное место в результате запроса
  RowIndex := 0;
  while not Form3.ADOQuery2.Eof and (RowIndex < StartIndex) do
  begin
    Form3.ADOQuery2.Next;
    Inc(RowIndex);
  end;

  // ƒобавл€ем ответы в RadioButton внутри GroupBox
  for i := 0 to GroupBox.ControlCount - 1 do
  begin
    if (GroupBox.Controls[i] is TRadioButton) and (not Form3.ADOQuery2.Eof) then
    begin
      RadioButton := TRadioButton(GroupBox.Controls[i]);
      RadioButton.Caption := Form3.ADOQuery2.FieldByName('answer text').AsString;
      RadioButton.Tag := Ord(Form3.ADOQuery2.FieldByName('correct answer').AsBoolean);
      Form3.ADOQuery2.Next;
      if RowIndex >= StartIndex + Count then
        Break; // ≈сли загрузили нужное количество ответов, выходим из цикла
    end;
  end;
end;






procedure LoadQuestionsZad3; //процедура дл€ загрузки и вывода вопросов 3-го задани€
begin
  Form3.ADOQuery3.Close;
  Form3.ADOQuery3.SQL.Text := 'SELECT TOP 4 [question text] FROM questions';
  Form3.ADOQuery3.Open;

  // «агружаем вопросы в Label8, Label9, Label21 и Label23
  if not Form3.ADOQuery3.IsEmpty then
  begin
    Form3.Label8.Caption :='39. ' + Form3.ADOQuery3.Fields[0].AsString; // ѕерва€ строка
    Form3.ADOQuery3.Next;
    if not Form3.ADOQuery3.IsEmpty then
    begin
      Form3.Label9.Caption :='40. ' + Form3.ADOQuery3.Fields[0].AsString; // ¬тора€ строка
      Form3.ADOQuery3.Next;
      if not Form3.ADOQuery3.IsEmpty then
      begin
        Form3.Label21.Caption :='41. ' + Form3.ADOQuery3.Fields[0].AsString; // “реть€ строка
        Form3.ADOQuery3.Next;
        if not Form3.ADOQuery3.IsEmpty then
          Form3.Label23.Caption :='42. ' + Form3.ADOQuery3.Fields[0].AsString; // „етверта€ строка
      end;
    end;
  end;
end;

procedure CheckAllAnswersZad3(Edit: TEdit; AnswerIndex: Integer); //проверка правильности ответов 3-го задани€
var
  TextFromDatabase: string;
begin
    // «акрываем ADOQuery3, если он был открыт
    Form3.ADOQuery3.Close;
    // ”станавливаем текст SQL запроса дл€ получени€ текста ответа из базы данных по индексу
    Form3.ADOQuery3.SQL.Text := 'SELECT [answer text] FROM answers WHERE code = :answer_index';
    // ”станавливаем значение параметра :answer_index дл€ запроса
    Form3.ADOQuery3.Parameters.ParamByName('answer_index').Value := AnswerIndex;
    // ќткрываем ADOQuery3 дл€ выполнени€ запроса
    Form3.ADOQuery3.Open;
    if not Form3.ADOQuery3.IsEmpty then
      TextFromDatabase := Form3.ADOQuery3.FieldByName('answer text').AsString;
    Form3.ADOQuery3.Close;

  // —равниваем текст из базы данных с текстом в Edit
  if (TextFromDatabase <> '') or (TextFromDatabase <> ' ') then
  begin
   if Edit.Text = TextFromDatabase then
      ball := ball + 2;
  end
end;


procedure TForm3.Edit1Enter(Sender: TObject);
begin
  if Edit1.Text = '39.' then
    Edit1.Text := ''; // ”дал€ем стандартный текст при входе в поле Edit
    Edit1.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit1Exit(Sender: TObject);
begin
  if (Edit1.Text = '') or (Edit1.Text = ' ') then
  begin
    Edit1.Text := '39.';    // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit1.Font.Color := clGray;    //    задаЄм цвет текста серый
    end
  else
    Edit1.Font.Color := clBlack;
end;

procedure TForm3.Edit2Enter(Sender: TObject);
begin
  if Edit2.Text = '40.' then
    Edit2.Text := '';  // ”дал€ем стандартный текст при входе в поле Edit
    Edit2.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit2Exit(Sender: TObject);
begin
  if (Edit2.Text = '') or (Edit2.Text = ' ') then
  begin
    Edit2.Text := '40.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit2.Font.Color := clGray;    //    задаЄм цвет текста серый
  end
  else
    Edit1.Font.Color := clBlack;
end;

procedure TForm3.Edit6Enter(Sender: TObject);
begin
  if Edit6.Text = '41.' then
    Edit6.Text := ''; // ”дал€ем стандартный текст при входе в поле Edit
    Edit6.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit6Exit(Sender: TObject);
begin
  if (Edit6.Text = '') or (Edit6.Text = ' ') then
  begin
    Edit6.Text := '41.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit6.Font.Color := clGray;    //    задаЄм цвет текста серый
  end
  else
    Edit1.Font.Color := clBlack;
end;


procedure TForm3.Edit9Enter(Sender: TObject);
begin
  if Edit9.Text = '42.' then
    Edit9.Text := '';  // ”дал€ем стандартный текст при входе в поле Edit
    Edit9.Font.Color := clBlack;//    задаЄм цвет текста черный

end;



procedure TForm3.Edit9Exit(Sender: TObject);
begin
 if (Edit9.Text = '') or (Edit9.Text = ' ') then
  begin
    Edit9.Text := '42.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit9.Font.Color := clGray;    //    задаЄм цвет текста серый
  end
  else
    Edit9.Font.Color := clBlack;
end;




procedure LoadQuestionsZad4; //процедура дл€ загрузки и вывода вопросов 4-го задани€
begin
  Form3.ADOQuery4.Close;
  Form3.ADOQuery4.SQL.Text := 'SELECT TOP 4 [question text] FROM questions';
  Form3.ADOQuery4.Open;

  // «агружаем вопросы в Label
  if not Form3.ADOQuery4.IsEmpty then
  begin
    Form3.Label12.Caption :='43. ' + Form3.ADOQuery4.Fields[0].AsString; // ѕерва€ строка
    Form3.ADOQuery4.Next;
    if not Form3.ADOQuery4.IsEmpty then
    begin
      Form3.Label13.Caption :='44. ' + Form3.ADOQuery4.Fields[0].AsString; // ¬тора€ строка
      Form3.ADOQuery4.Next;
      if not Form3.ADOQuery4.IsEmpty then
      begin
        Form3.Label24.Caption :='45. ' + Form3.ADOQuery4.Fields[0].AsString; // “реть€ строка
        Form3.ADOQuery4.Next;
        if not Form3.ADOQuery4.IsEmpty then
          Form3.Label25.Caption :='46. ' + Form3.ADOQuery4.Fields[0].AsString; // „етверта€ строка
      end;
    end;
  end;
end;

procedure CheckAllAnswersZad4(Edit: TEdit; AnswerIndex: Integer); //проверка правильности ответов 4-го задани€
var
  TextFromDatabase: string;
begin
    // «акрываем ADOQuery3, если он был открыт
    Form3.ADOQuery4.Close;
    // ”станавливаем текст SQL запроса дл€ получени€ текста ответа из базы данных по индексу
    Form3.ADOQuery4.SQL.Text := 'SELECT [answer text] FROM answers WHERE code = :answer_index';
    // ”станавливаем значение параметра :answer_index дл€ запроса
    Form3.ADOQuery4.Parameters.ParamByName('answer_index').Value := AnswerIndex;
    // ќткрываем ADOQuery3 дл€ выполнени€ запроса
    Form3.ADOQuery4.Open;
    if not Form3.ADOQuery4.IsEmpty then
      TextFromDatabase := Form3.ADOQuery4.FieldByName('answer text').AsString;
    Form3.ADOQuery4.Close;

  // —равниваем текст из базы данных с текстом в Edit
  if (TextFromDatabase <> '') or (TextFromDatabase <> ' ') then
  begin
   if Edit.Text = TextFromDatabase then
      ball := ball + 2;
  end
end;

procedure TForm3.Edit3Enter(Sender: TObject);
begin
  if Edit3.Text = '43.' then
    Edit3.Text := '';  // ”дал€ем стандартный текст при входе в поле Edit
    Edit3.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit3Exit(Sender: TObject);
begin
  if (Edit3.Text = '') or (Edit3.Text = ' ') then
  begin
    Edit3.Text := '43.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit3.Font.Color := clGray;    //    задаЄм цвет текста серый
      end
  else
    Edit1.Font.Color := clBlack;
end;

procedure TForm3.Edit4Enter(Sender: TObject);
begin
  if Edit4.Text = '44.' then
    Edit4.Text := '';  // ”дал€ем стандартный текст при входе в поле Edit
    Edit4.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit4Exit(Sender: TObject);
begin
  if (Edit4.Text = '') or (Edit4.Text = ' ') then
  begin
    Edit4.Text := '44.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit4.Font.Color := clGray;    //    задаЄм цвет текста серый
      end
  else
    Edit1.Font.Color := clBlack;
end;

procedure TForm3.Edit10Enter(Sender: TObject);
begin
  if Edit10.Text = '45.' then
    Edit10.Text := '';  // ”дал€ем стандартный текст при входе в поле Edit
    Edit10.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit10Exit(Sender: TObject);
begin
  if (Edit10.Text = '') or (Edit10.Text = ' ') then
  begin
    Edit10.Text := '45.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit10.Font.Color := clGray;    //    задаЄм цвет текста серый
    end
  else
    Edit1.Font.Color := clBlack;
end;

procedure TForm3.Edit11Enter(Sender: TObject);
begin
  if Edit11.Text = '46.' then
    Edit11.Text := '';  // ”дал€ем стандартный текст при входе в поле Edit
    Edit11.Font.Color := clBlack;//    задаЄм цвет текста черный
end;

procedure TForm3.Edit11Exit(Sender: TObject);
begin
  if (Edit11.Text = '') or (Edit11.Text = ' ') then
  begin
    Edit11.Text := '46.';     // ¬осстанавливаем стандартный текст при выходе из пол€ Edit
    Edit11.Font.Color := clGray;    //    задаЄм цвет текста серый
      end
  else
    Edit1.Font.Color := clBlack;
end;







procedure LoadQuestionsZad5; //процедура дл€ загрузки и вывода вопросов 5-го задани€
begin
  Form3.ADOQuery5.Close;
  Form3.ADOQuery5.SQL.Text := 'SELECT TOP 1 [question text] FROM questions';
  Form3.ADOQuery5.Open;

  // «агружаем вопросы в Label
  if not Form3.ADOQuery5.IsEmpty then
    Form3.Label16.Caption := Form3.ADOQuery5.Fields[0].AsString; // ѕерва€ строка
end;

procedure CheckAllAnswersZad5(Edit: TEdit; AnswerIndex: Integer); //проверка правильности ответов 5-го задани€
var
  TextFromDatabase: string;
begin
    // «акрываем ADOQuery3, если он был открыт
    Form3.ADOQuery5.Close;
    // ”станавливаем текст SQL запроса дл€ получени€ текста ответа из базы данных по индексу
    Form3.ADOQuery5.SQL.Text := 'SELECT [answer text] FROM answers WHERE code = :answer_index';
    // ”станавливаем значение параметра :answer_index дл€ запроса
    Form3.ADOQuery5.Parameters.ParamByName('answer_index').Value := AnswerIndex;
    // ќткрываем ADOQuery3 дл€ выполнени€ запроса
    Form3.ADOQuery5.Open;
    if not Form3.ADOQuery5.IsEmpty then
      TextFromDatabase := Form3.ADOQuery5.FieldByName('answer text').AsString;
    Form3.ADOQuery5.Close;

  // —равниваем текст из базы данных с текстом в Edit
  if (TextFromDatabase <> '') or (TextFromDatabase <> ' ') then
  begin
   if Edit.Text = TextFromDatabase then
      ball := ball + 2;
  end
end;







procedure TForm3.FormCreate(Sender: TObject);
var
  i: Integer;
  RadioButton: TRadioButton;
begin

  LoadRandomQuestionsZad1;

  LoadQuestionsZad2;
  LoadAnswersToGroupBox(GroupBox1, 0, 4);
  LoadAnswersToGroupBox(GroupBox2, 4, 4);

  LoadQuestionsZad3;

  LoadQuestionsZad4;

  LoadQuestionsZad5;
end;

procedure TForm3.FormShow(Sender: TObject);
begin
ScrollBox1.SetFocus;//фокусировка
end;


procedure TForm3.Button1Click(Sender: TObject);
var i:integer;  RadioButton: TRadioButton;
begin
//проверка правильности ответа 1-го задани€
  CheckCorrectAnswer(radiogroup1);CheckCorrectAnswer(radiogroup2);
  CheckCorrectAnswer(radiogroup3);CheckCorrectAnswer(radiogroup4);
  CheckCorrectAnswer(radiogroup5);CheckCorrectAnswer(radiogroup6);
  CheckCorrectAnswer(radiogroup7);CheckCorrectAnswer(radiogroup8);
  CheckCorrectAnswer(radiogroup9);CheckCorrectAnswer(radiogroup10);
  CheckCorrectAnswer(radiogroup11);CheckCorrectAnswer(radiogroup12);
  CheckCorrectAnswer(radiogroup13);CheckCorrectAnswer(radiogroup14);
  CheckCorrectAnswer(radiogroup15);CheckCorrectAnswer(radiogroup16);
  CheckCorrectAnswer(radiogroup17);CheckCorrectAnswer(radiogroup18);
  CheckCorrectAnswer(radiogroup20);CheckCorrectAnswer(radiogroup21);
  CheckCorrectAnswer(radiogroup22);CheckCorrectAnswer(radiogroup23);
  CheckCorrectAnswer(radiogroup24);CheckCorrectAnswer(radiogroup25);
  CheckCorrectAnswer(radiogroup26);CheckCorrectAnswer(radiogroup27);
  CheckCorrectAnswer(radiogroup28);CheckCorrectAnswer(radiogroup29);
  CheckCorrectAnswer(radiogroup30);CheckCorrectAnswer(radiogroup31);
  CheckCorrectAnswer(radiogroup32);CheckCorrectAnswer(radiogroup33);
  CheckCorrectAnswer(radiogroup34);CheckCorrectAnswer(radiogroup35);
  CheckCorrectAnswer(radiogroup36);CheckCorrectAnswer(radiogroup19);
//проверка 2-го задани€
  // ѕроходим по всем RadioButton внутри GroupBox
  for i := 0 to GroupBox1.ControlCount - 1 do
  begin
    if GroupBox1.Controls[i] is TRadioButton then
    begin
      RadioButton := TRadioButton(GroupBox1.Controls[i]);
      // ѕровер€ем выбран ли RadioButton и €вл€етс€ ли он правильным ответом
      if RadioButton.Checked and (RadioButton.Tag = 1) then
        Inc(Ball, 2); // ≈сли выбран правильный ответ, увеличиваем балл на 2
    end;
  end;
    for i := 0 to GroupBox2.ControlCount - 1 do
  begin
    if GroupBox2.Controls[i] is TRadioButton then
    begin
      RadioButton := TRadioButton(GroupBox2.Controls[i]);
      // ѕровер€ем выбран ли RadioButton и €вл€етс€ ли он правильным ответом
      if RadioButton.Checked and (RadioButton.Tag = 1) then
        Inc(Ball, 2); // ≈сли выбран правильный ответ, увеличиваем балл на 2
    end;
  end;
  //проверка правильности ответов 3-го задани€
  CheckAllAnswersZad3(edit1,1);
  CheckAllAnswersZad3(edit2,2);
  CheckAllAnswersZad3(edit6,3);
  CheckAllAnswersZad3(edit9,4);
  //проверка правильности ответов 4-го задани€
  CheckAllAnswersZad4(edit3,1);
  CheckAllAnswersZad4(edit4,2);
  CheckAllAnswersZad4(edit10,3);
  CheckAllAnswersZad4(edit11,4);
  //проверка правильности ответов 5-го задани€
  CheckAllAnswersZad5(edit5,1);
  CheckAllAnswersZad5(edit7,2);
  CheckAllAnswersZad5(edit8,3);
  CheckAllAnswersZad5(edit12,4);
//вывод баллов
  ShowMessage('»тоговый балл: ' + IntToStr(ball));
end;






//счетчик дл€ пройденого
procedure TForm3.RadioGroup1Click(Sender: TObject);
begin
  // ѕровер€ем, выбран ли какой-либо элемент в RadioGroup
  if RadioGroup1.ItemIndex <> -1 then
  begin
    if isFirstClick1 then
    begin
      Inc(schetchik);
      isFirstClick1 := False// ”станавливаем флаг в false, чтобы игнорировать дополнительные клики
    end;
  end;
  Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup2Click(Sender: TObject);
begin
     // ѕровер€ем, выбран ли какой-либо элемент в RadioGroup
  if RadioGroup2.ItemIndex <> -1 then
  begin
    if isFirstClick2 then
    begin
      Inc(schetchik);
      isFirstClick2 := False;
    end;
  end;
  Label28.Caption := IntToStr(schetchik);
end;


procedure TForm3.RadioGroup3Click(Sender: TObject);
begin
  if RadioGroup3.ItemIndex <> -1 then
  begin
    if isFirstClick3 then
    begin
      Inc(schetchik);
      isFirstClick3 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup4Click(Sender: TObject);
begin
  if RadioGroup4.ItemIndex <> -1 then
  begin
    if isFirstClick4 then
    begin
      Inc(schetchik);
      isFirstClick4 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup5Click(Sender: TObject);
begin
  if RadioGroup5.ItemIndex <> -1 then
  begin
    if isFirstClick5 then
    begin
      Inc(schetchik);
      isFirstClick5 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup6Click(Sender: TObject);
begin
  if RadioGroup6.ItemIndex <> -1 then
  begin
    if isFirstClick6 then
    begin
      Inc(schetchik);
      isFirstClick6 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup7Click(Sender: TObject);
begin
  if RadioGroup7.ItemIndex <> -1 then
  begin
    if isFirstClick7 then
    begin
      Inc(schetchik);
      isFirstClick7 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup8Click(Sender: TObject);
begin
  if RadioGroup8.ItemIndex <> -1 then
  begin
    if isFirstClick8 then
    begin
      Inc(schetchik);
      isFirstClick8 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup9Click(Sender: TObject);
begin
  if RadioGroup9.ItemIndex <> -1 then
  begin
    if isFirstClick9 then
    begin
      Inc(schetchik);
      isFirstClick9 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup10Click(Sender: TObject);
begin
  if RadioGroup10.ItemIndex <> -1 then
  begin
    if isFirstClick10 then
    begin
      Inc(schetchik);
      isFirstClick10 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup11Click(Sender: TObject);
begin
  if RadioGroup11.ItemIndex <> -1 then
  begin
    if isFirstClick11 then
    begin
      Inc(schetchik);
      isFirstClick11 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup12Click(Sender: TObject);
begin
    if RadioGroup12.ItemIndex <> -1 then
  begin
    if isFirstClick12 then
    begin
      Inc(schetchik);
      isFirstClick12 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup13Click(Sender: TObject);
begin
    if RadioGroup13.ItemIndex <> -1 then
  begin
    if isFirstClick13 then
    begin
      Inc(schetchik);
      isFirstClick13 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup14Click(Sender: TObject);
begin
    if RadioGroup14.ItemIndex <> -1 then
  begin
    if isFirstClick14 then
    begin
      Inc(schetchik);
      isFirstClick14 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup15Click(Sender: TObject);
begin
 if RadioGroup15.ItemIndex <> -1 then
  begin
    if isFirstClick15 then
    begin
      Inc(schetchik);
      isFirstClick15 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup16Click(Sender: TObject);
begin
 if RadioGroup16.ItemIndex <> -1 then
  begin
    if isFirstClick16 then
    begin
      Inc(schetchik);
      isFirstClick16 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup17Click(Sender: TObject);
begin
 if RadioGroup17.ItemIndex <> -1 then
  begin
    if isFirstClick17 then
    begin
      Inc(schetchik);
      isFirstClick17 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup18Click(Sender: TObject);
begin
 if RadioGroup18.ItemIndex <> -1 then
  begin
    if isFirstClick18 then
    begin
      Inc(schetchik);
      isFirstClick18 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup19Click(Sender: TObject);
begin
 if RadioGroup19.ItemIndex <> -1 then
  begin
    if isFirstClick19 then
    begin
      Inc(schetchik);
      isFirstClick19 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup20Click(Sender: TObject);
begin
 if RadioGroup20.ItemIndex <> -1 then
  begin
    if isFirstClick20 then
    begin
      Inc(schetchik);
      isFirstClick20 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup21Click(Sender: TObject);
begin
 if RadioGroup21.ItemIndex <> -1 then
  begin
    if isFirstClick21 then
    begin
      Inc(schetchik);
      isFirstClick21 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup22Click(Sender: TObject);
begin
 if RadioGroup22.ItemIndex <> -1 then
  begin
    if isFirstClick22 then
    begin
      Inc(schetchik);
      isFirstClick22 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup23Click(Sender: TObject);
begin
 if RadioGroup23.ItemIndex <> -1 then
  begin
    if isFirstClick23 then
    begin
      Inc(schetchik);
      isFirstClick23 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup24Click(Sender: TObject);
begin
 if RadioGroup24.ItemIndex <> -1 then
  begin
    if isFirstClick24 then
    begin
      Inc(schetchik);
      isFirstClick24 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup25Click(Sender: TObject);
begin
 if RadioGroup25.ItemIndex <> -1 then
  begin
    if isFirstClick25 then
    begin
      Inc(schetchik);
      isFirstClick25 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup26Click(Sender: TObject);
begin
 if RadioGroup26.ItemIndex <> -1 then
  begin
    if isFirstClick26 then
    begin
      Inc(schetchik);
      isFirstClick26 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup27Click(Sender: TObject);
begin
 if RadioGroup27.ItemIndex <> -1 then
  begin
    if isFirstClick27 then
    begin
      Inc(schetchik);
      isFirstClick27 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup28Click(Sender: TObject);
begin
 if RadioGroup28.ItemIndex <> -1 then
  begin
    if isFirstClick28 then
    begin
      Inc(schetchik);
      isFirstClick28 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup29Click(Sender: TObject);
begin
 if RadioGroup29.ItemIndex <> -1 then
  begin
    if isFirstClick29 then
    begin
      Inc(schetchik);
      isFirstClick29 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup30Click(Sender: TObject);
begin
 if RadioGroup30.ItemIndex <> -1 then
  begin
    if isFirstClick30 then
    begin
      Inc(schetchik);
      isFirstClick30 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup31Click(Sender: TObject);
begin
 if RadioGroup31.ItemIndex <> -1 then
  begin
    if isFirstClick31 then
    begin
      Inc(schetchik);
      isFirstClick31 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup32Click(Sender: TObject);
begin
 if RadioGroup32.ItemIndex <> -1 then
  begin
    if isFirstClick32 then
    begin
      Inc(schetchik);
      isFirstClick32 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup33Click(Sender: TObject);
begin
 if RadioGroup33.ItemIndex <> -1 then
  begin
    if isFirstClick33 then
    begin
      Inc(schetchik);
      isFirstClick33 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup34Click(Sender: TObject);
begin
 if RadioGroup34.ItemIndex <> -1 then
  begin
    if isFirstClick34 then
    begin
      Inc(schetchik);
      isFirstClick34 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup35Click(Sender: TObject);
begin
 if RadioGroup35.ItemIndex <> -1 then
  begin
    if isFirstClick35 then
    begin
      Inc(schetchik);
      isFirstClick35 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioGroup36Click(Sender: TObject);
begin
 if RadioGroup36.ItemIndex <> -1 then
  begin
    if isFirstClick36 then
    begin
      Inc(schetchik);
      isFirstClick36 := False;
    end;
  end;
    Label28.Caption := IntToStr(schetchik);
end;

procedure TForm3.RadioButton1Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_1 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_1 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;
end;

procedure TForm3.RadioButton2Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_1 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_1 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;

end;

procedure TForm3.RadioButton3Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_1 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_1 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;

end;

procedure TForm3.RadioButton4Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_1 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_1 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;

end;

procedure TForm3.RadioButton5Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_2 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_2 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;
end;

procedure TForm3.RadioButton6Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_2 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_2 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;
end;

procedure TForm3.RadioButton7Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_2 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_2 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;
end;

procedure TForm3.RadioButton8Click(Sender: TObject);
begin
  // ѕровер€ем, был ли уже сделан клик
  if isFirstClickzad2_2 then
  begin
    Inc(schetchik);
    Label28.Caption := IntToStr(schetchik);
    isFirstClickzad2_2 := False; // ”станавливаем флаг в False, чтобы игнорировать дополнительные клики
  end;
end;


end.
